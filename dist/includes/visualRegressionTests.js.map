{"version":3,"sources":["../../includes/visualRegressionTests.js"],"names":["args","process","argv","slice","sitesToTestKeys","Object","keys","sitesToTest","length","prototype","hasOwnProperty","call","site","rl","readline","createInterface","input","stdin","output","stdout","console","log","siteNumMap","push","key","entries","colors","bold","question","userSite","includes","Array","from","parseInt","red","gray","close"],"mappings":";;;;;;kBAWe,YAAY;AACvB,UAAMA,OAAO,wBAASC,QAAQC,IAAR,CAAaC,KAAb,CAAmB,CAAnB,CAAT,EAAgC,EAAhC,CAAb;AACA,UAAMC,kBAAkBC,OAAOC,IAAP,CAAYC,qBAAZ,CAAxB;AACA,QAAIH,gBAAgBI,MAAhB,KAA2B,CAA/B,EAAkC;AAC9B,gDAAyBJ,gBAAgB,CAAhB,CAAzB;AACH,KAFD,MAEO,IAAIC,OAAOI,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCX,IAArC,EAA2C,MAA3C,CAAJ,EAAwD;AAC3D,gDAAyBA,KAAKY,IAA9B;AACH,KAFM,MAEA;;AAEH,cAAMC,KAAKC,mBAASC,eAAT,CAAyB;AAChCC,mBAAOf,QAAQgB,KADiB;AAEhCC,oBAAQjB,QAAQkB;AAFgB,SAAzB,CAAX;;AAKAC,gBAAQC,GAAR,CAAY,sBAAZ;AACA,YAAIC,aAAa,EAAjB;;AAEA,aAAK,MAAMV,IAAX,IAAmBL,qBAAnB,EAAgC;AAC5Be,uBAAWC,IAAX,CAAgBX,IAAhB;AACH;;AAED,aAAK,IAAI,CAACY,GAAD,EAAMZ,IAAN,CAAT,IAAwBU,WAAWG,OAAX,EAAxB,EAA8C;AAC1CL,oBAAQC,GAAR,CAAa,IAAGK,qBAAOC,IAAP,CAAYH,GAAZ,CAAiB,MAAKZ,IAAK,EAA3C;AACH;;AAEDC,WAAGe,QAAH,CAAa,eAAcF,qBAAOC,IAAP,CAAY,QAAZ,CAAsB,0CAAyCD,qBAAOC,IAAP,CAAY,KAAZ,CAAmB,sBAA7G,EAAqIE,QAAD,IAAc;AAC9I,gBAAI,UAAUA,QAAd,EAAwB;AACpB;AACH,aAFD,MAEO,IAAKP,WAAWQ,QAAX,CAAoBD,QAApB,CAAL,EAAqC;AACxC,wDAAyBA,QAAzB;AACH,aAFM,MAEA,IAAKE,MAAMC,IAAN,CAAWV,WAAWhB,IAAX,EAAX,EAA8BwB,QAA9B,CAAuCG,SAASJ,QAAT,CAAvC,CAAL,EAAkE;AACrE,wDAAyBP,WAAWO,QAAX,CAAzB;AACH,aAFM,MAEA;AACH,0CAAWH,qBAAOQ,GAAP,CAAY,GAAER,qBAAOS,IAAP,CAAYN,QAAZ,CAAsB,gEAA+DH,qBAAOS,IAAP,CAAY,yBAAZ,CAAuC,cAA1I,CAAX;AACH;AACDtB,eAAGuB,KAAH;AACH,SAXD;AAaH;AAEJ,C;;AAlDD;;;;AACA;;;;AACA;;;;AACA;;;;AAGA;;;;AACA;;;;AACA","file":"visualRegressionTests.js","sourcesContent":["// Local dependencies\nimport throwError from './throwError';\nimport sitesToTest from './sitesToTest';\nimport testAllSites from './testAllSites';\nimport visualRegressionTestSite from './visualRegressionTestSite';\n\n// External dependencies\nimport readline from 'readline';\nimport minimist from 'minimist';\nimport colors from 'ansi-colors';\n\nexport default function () {\n    const args = minimist(process.argv.slice(2), {});\n    const sitesToTestKeys = Object.keys(sitesToTest);\n    if (sitesToTestKeys.length === 1) {\n        visualRegressionTestSite(sitesToTestKeys[0]);\n    } else if (Object.prototype.hasOwnProperty.call(args, 'site')) {\n        visualRegressionTestSite(args.site);\n    } else {\n\n        const rl = readline.createInterface({\n            input: process.stdin,\n            output: process.stdout\n        });\n\n        console.log(\"\\nAvailable sites:\\n\");\n        let siteNumMap = [];\n\n        for (const site in sitesToTest) {\n            siteNumMap.push(site);\n        }\n\n        for( let [key, site] of siteNumMap.entries() ){\n            console.log(`[${colors.bold(key)}]: ${site}`);\n        }\n\n        rl.question(`\\nEnter the ${colors.bold('number')} of the site you want to test or enter ${colors.bold('all')} to test all sites: `, (userSite) => {\n            if( 'all' === userSite ){\n                testAllSites();\n            } else if ( siteNumMap.includes(userSite) ) {\n                visualRegressionTestSite(userSite);\n            } else if ( Array.from(siteNumMap.keys()).includes(parseInt(userSite)) ) {\n                visualRegressionTestSite(siteNumMap[userSite]);\n            } else {\n                throwError(colors.red(`${colors.gray(userSite)} is not a valid site. Check the name you entered against the ${colors.gray('includes/sitesToTest.js')} config file`));\n            }\n            rl.close();\n        });\n\n    }\n\n}"]}