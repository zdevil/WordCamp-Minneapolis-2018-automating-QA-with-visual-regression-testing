{"version":3,"sources":["../../includes/visualRegressionTestSite.js"],"names":["siteToTest","siteExists","Object","prototype","hasOwnProperty","call","sitesToTest","rootDir","path","dirname","require","main","filename","endsWith","substring","indexOf","colors","red","gray","name","site","yellow","label","currentConfig","BackstopReferenceBaseUrl","BackstopTestUrl","pathsToTest","config","then","green","catch"],"mappings":";;;;;;kBAWgB,UAAUA,UAAV,EAAsB;AAClC,UAAMC,aAAaC,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCC,qBAArC,EAAkDN,UAAlD,CAAnB;AACA,QAAIO,UAAUC,eAAKC,OAAL,CAAaC,QAAQC,IAAR,CAAaC,QAA1B,CAAd;AACA,QAAIL,QAAQM,QAAR,CAAiB,MAAjB,CAAJ,EAA8B;AAC1BN,kBAAUA,QAAQO,SAAR,CAAkB,CAAlB,EAAqBP,QAAQQ,OAAR,CAAgB,OAAhB,CAArB,CAAV;AACH;;AAED,QAAI,CAACd,UAAL,EAAiB;AACb,kCAAWe,qBAAOC,GAAP,CAAY,GAAED,qBAAOE,IAAP,CAAYlB,UAAZ,CAAwB,gEAA+DgB,qBAAOE,IAAP,CAAY,yBAAZ,CAAuC,cAA5I,CAAX;AACH;;AAEDZ,0BAAYN,UAAZ,EAAwBmB,IAAxB,GAA+BnB,UAA/B;AACA,UAAMoB,OAAOd,sBAAYN,UAAZ,CAAb;;AAEA,4BAAIgB,qBAAOK,MAAP,CAAe,YAAWD,KAAKE,KAAM,EAArC,CAAJ;;AAEA,4BAAK,gCAA+BF,KAAKE,KAAM,EAA/C;AACA,UAAMC,gBAAgB,8BAAeH,KAAKI,wBAApB,EAA8CJ,KAAKK,eAAnD,EAAoEL,KAAKM,WAAzE,EAAsFN,KAAKD,IAA3F,CAAtB;;AAEA,4BAAK,8BAA6BC,KAAKE,KAAM,EAA7C;AACA,8BAAS,WAAT,EAAsB;AAClBK,gBAAQJ;AADU,KAAtB,EAEGK,IAFH,CAEQ,MAAM;AACV,gCAAK,sCAAqCR,KAAKE,KAAM,mBAArD;AACA,kCAAS,MAAT,EAAiB;AACbK,oBAAQJ;AADK,SAAjB,EAEGK,IAFH,CAEQ,MAAM;;AAEV,oCAAIZ,qBAAOK,MAAP,CAAe,mBAAkBL,qBAAOE,IAAP,CAAa,GAAEX,OAAQ,kBAAiBa,KAAKD,IAAK,yBAAlD,CAA4E,EAA7G,CAAJ;AACA,oCAAIH,qBAAOa,KAAP,CAAc,gCAA+BT,KAAKE,KAAM,GAAxD,CAAJ;AAEH,SAPD,EAOGQ,KAPH,CAOS,MAAM;;AAEX,oCAAK,oBAAmBvB,OAAQ,kBAAiBa,KAAKD,IAAK,0BAA3D;AACA,sCAAWH,qBAAOC,GAAP,CAAY,gCAA+BD,qBAAOE,IAAP,CAAYE,KAAKE,KAAjB,CAAwB,GAAnE,CAAX;AAEH,SAZD;AAaH,KAjBD,EAiBGQ,KAjBH,CAiBS,MAAM;AACX,kCAAWd,qBAAOC,GAAP,CAAY,oCAAmCD,qBAAOE,IAAP,CAAYE,KAAKE,KAAjB,CAAwB,6CAAvE,CAAX;AACH,KAnBD;AAoBH,C;;AAlDD;;;;AACA;;;;AACA;;;;AAGA;;;;AACA;;;;AACA;;;;AACA","file":"visualRegressionTestSite.js","sourcesContent":["// Local dependencies\nimport throwError from './throwError';\nimport backstopConfig from './backstopConfig';\nimport sitesToTest from './sitesToTest';\n\n// External dependencies\nimport path from 'path';\nimport backstop from 'backstopjs';\nimport log from 'fancy-log';\nimport colors from 'ansi-colors';\n\nexport default  function (siteToTest) {\n    const siteExists = Object.prototype.hasOwnProperty.call(sitesToTest, siteToTest);\n    let rootDir = path.dirname(require.main.filename);\n    if (rootDir.endsWith('dist')) {\n        rootDir = rootDir.substring(0, rootDir.indexOf('/dist'));\n    }\n\n    if (!siteExists) {\n        throwError(colors.red(`${colors.gray(siteToTest)} is not a valid site. Check the name you entered against the ${colors.gray('includes/sitesToTest.js')} config file`));\n    }\n\n    sitesToTest[siteToTest].name = siteToTest;\n    const site = sitesToTest[siteToTest];\n\n    log(colors.yellow(`Testing: ${site.label}`));\n\n    log(`Generating configuration for ${site.label}`);\n    const currentConfig = backstopConfig(site.BackstopReferenceBaseUrl, site.BackstopTestUrl, site.pathsToTest, site.name);\n\n    log(`Running Backstop tests for ${site.label}`);\n    backstop('reference', {\n        config: currentConfig\n    }).then(() => {\n        log(`Backstop JS reference complete for ${site.label}! Starting tests.`);\n        backstop('test', {\n            config: currentConfig\n        }).then(() => {\n\n            log(colors.yellow(`Report saved to ${colors.gray(`${rootDir}/backstop_data/${site.name}/html_report/index.html`)}`));\n            log(colors.green(`Backstop JS tests passed for ${site.label}!`));\n\n        }).catch(() => {\n\n            log(`Report saved to \"${rootDir}/backstop_data/${site.name}/html_report/index.html\"`);\n            throwError(colors.red(`Backstop JS tests failed for ${colors.gray(site.label)}!`));\n\n        });\n    }).catch(() => {\n        throwError(colors.red(`Backstop JS reference failed for ${colors.gray(site.label)}! Please check the BackstopReferenceBaseUrl`));\n    });\n}\n"]}